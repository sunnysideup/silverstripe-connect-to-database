#!/bin/bash

# Path to your .env file
envFile=".env"

# Check if the .env file exists
if [[ ! -f $envFile ]]; then
    echo "Error: .env file not found in the current directory."
    exit 1
fi

# Function to trim quotes and spaces from a string
trim_quotes_and_spaces() {
    echo "$1" | sed -e 's/^ *//' -e 's/ *$//' -e 's/^"//' -e 's/"$//' -e "s/^'//" -e "s/'$//"
}

# Load variables from the .env file
while IFS='=' read -r key value; do
    value=$(trim_quotes_and_spaces "$value") # Trim quotes and spaces
    if [[ $key == "SS_DATABASE_NAME" ]]; then
        databaseName=$value
        echo "Connecting to database $databaseName"
    elif [[ $key == "SS_DATABASE_SERVER" ]]; then
        databaseServer=$value
        echo "Server: $databaseServer"
    elif [[ $key == "SS_DATABASE_USERNAME" ]]; then
        databaseUsername=$value
        echo "Username: $databaseUsername"
    elif [[ $key == "SS_DATABASE_PASSWORD" ]]; then
        databasePassword=$value
        echo "Password: ******"
    fi
done < <(grep -v '^#' "$envFile")

# Default to localhost if server is not set
databaseServer=${databaseServer:-localhost}

# Check if all necessary variables are set
if [[ -z $databaseName || -z $databaseUsername || -z $databasePassword ]]; then
    echo "Error: Missing required database information in .env file."
    exit 1
fi

# Construct and execute the mysql command
mysql -u "$databaseUsername" -p"$databasePassword" -h "$databaseServer" -A "$databaseName"
